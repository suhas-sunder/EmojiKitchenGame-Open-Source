{
  "version": 3,
  "sources": ["../../../app/routes/emoji-combos.$emoji.tsx", "../../../node_modules/uuid/dist/esm-browser/stringify.js", "../../../node_modules/uuid/dist/esm-browser/rng.js", "../../../node_modules/uuid/dist/esm-browser/native.js", "../../../node_modules/uuid/dist/esm-browser/v4.js"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/emoji-combos.$emoji.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/emoji-combos.$emoji.tsx\");\n  import.meta.hot.lastModified = \"1731046171314.536\";\n}\n// REMIX HMR END\n\nimport { json, Link, redirect, useLoaderData, useOutletContext } from \"@remix-run/react\";\nimport localforage from \"localforage\";\nimport cloudflareR2API from \"../client/components/api/cloudflareR2API\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { Fragment } from \"react/jsx-runtime\";\nimport Icon from \"../client/components/utils/other/Icon\";\nimport ComboImage from \"../client/components/layout/ComboImage\";\nimport { useEffect, useState } from \"react\";\nimport pako from \"pako\";\nimport trackingAPI from \"../client/components/api/trackingAPI\";\nimport useUpdateLikes from \"../client/components/hooks/useUpdateLikes\";\nimport LikesAndViews from \"../client/components/ui/LikesAndViews\";\nexport const meta = ({\n  data\n}) => {\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  const {\n    emojiData\n  } = data;\n  if (!emojiData) return [{\n    title: \"\u2728 Copy, Paste, & Share Fun Emojis & Symbols! \u2728\uD83D\uDC80\uD83C\uDF89\"\n  }, {\n    name: \"description\",\n    content: \"\uD83D\uDE0E\uD83D\uDE80\u2B50 Explore our collection of vibrant emojis and unique symbols ready for you to copy, paste, and share! Whether you're adding flair to your messages or expressing emotions with ease, you'll find the perfect emoji or symbol here. \uD83C\uDF1F\u2728 Dive in and let your creativity shine! \uD83D\uDD25\uD83C\uDF73\uD83D\uDC69\u200D\uD83C\uDF73 Emoji Kitchen \uD83D\uDC40\uD83D\uDC4D\uD83E\uDEF6\uD83C\uDFFB\u2714\uFE0F\uD83D\uDE4F\uD83D\uDE80\uD83E\uDD29\"\n  }];\n  return [{\n    title: `${emojiData.title} - Emoji Meaning: ${emojiData.name} - ${emojiData.unicode} `\n  }, {\n    name: \"description\",\n    content: `${emojiData?.description}`\n  }];\n};\nexport const loader = async ({\n  params\n}) => {\n  if (!params.emoji) return redirect(\"/404\");\n  const unicode = params?.emoji?.split(\"_\")[0];\n  let emojiData = null;\n  try {\n    // Fetch the gzipped JSON file from Cloudflare R2\n    const response = await cloudflareR2API.get(`/emojis/${unicode.length < 9 ? unicode.slice(1) : unicode}.json.gz`, {\n      method: \"GET\",\n      responseType: \"arraybuffer\"\n    });\n\n    // Check if the response data is gzipped\n    const isGzip = response.data[0] === 0x1f && response.data[1] === 0x8b;\n    let decompressedData = null;\n    if (isGzip) {\n      // Decompress the gzipped data\n      decompressedData = pako.ungzip(new Uint8Array(response.data), {\n        to: \"string\"\n      });\n    } else {\n      // If not gzipped, use the data directly\n      decompressedData = new TextDecoder().decode(response.data);\n    }\n\n    // Parse the decompressed data as JSON\n    emojiData = JSON.parse(decompressedData);\n  } catch (error) {\n    console.error(\"Error fetching or decompressing emoji data:\", error);\n    return redirect(\"/404\");\n  }\n  if (!emojiData) return redirect(\"/404\");\n  return json({\n    emojiData\n  });\n};\n/**\n * This function is responsible for fetching filenames (static json data) from the server and caching them in the browser.\n * It first checks if the filenames are already cached in local storage. If they are, it returns the cached filenames.\n * If they are not cached, it fetches the filenames from the server and caches them.\n *\n * @param {ClientLoaderFunctionArgs} args - An object containing the serverLoader function.\n * @returns {Promise<{ filenames: { id: string, keys: string }[] }>} - A promise that resolves to an object containing the filenames.\n * @throws {Error} - If there is an error fetching the filenames from the server or caching them in local storage.\n */\nexport async function clientLoader({\n  serverLoader,\n  params\n}) {\n  // Define the cache key for the emoji data file\n  if (!params.emoji) return redirect(\"/404\");\n  const cacheKey = params?.emoji?.split(\"_\")[0];\n  try {\n    // Check if the emojiData are already cached in local storage\n    const cachedFilenames = await localforage.getItem(cacheKey);\n\n    // If the emojiData are cached, return them\n    if (cachedFilenames) {\n      return {\n        emojiData: cachedFilenames\n      };\n    } else {\n      // If the filenames are not cached, fetch them from the server and cache them\n      const {\n        emojiData\n      } = await serverLoader();\n\n      // Cache the emojiData in local storage\n      await localforage.setItem(cacheKey, emojiData);\n\n      // Return the cached emojiData\n      return {\n        emojiData\n      };\n    }\n  } catch (error) {\n    // If there is an error fetching the cached filenames, log the error and continue to fetch the filenames from the server\n    console.error(\"Error fetching cached filenames:\", error);\n  }\n}\nfunction EmojiPreview({\n  emoji\n}) {\n  _s();\n  const [isCopied, setIsCopied] = useState(\"\");\n  const {\n    totalStats,\n    setTotalStats\n  } = useOutletContext();\n  const {\n    updateLikeCount\n  } = useUpdateLikes({\n    setTotalStats\n  });\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      isCopied && setIsCopied(\"\");\n    }, 400);\n    return () => clearTimeout(timeout);\n  }, [isCopied]);\n  useEffect(() => {\n    const updateViewCount = async () => {\n      if (process.env.NODE_ENV === \"development\") return;\n      if (emoji.unicode) {\n        try {\n          // Send the request to update the view count\n          const response = await trackingAPI.post(\"/update-view-count\", {\n            emoji_unicode: emoji.unicode // Ensure this matches the expected parameter name in your backend\n          });\n          if (response.status === 200) {\n            // Update the totalStats state with the new view count\n            setTotalStats(prevStats => {\n              // Check if the emoji already exists in the stats\n              const existingStat = prevStats.find(stat => stat.emoji_unicode === emoji.unicode);\n              if (existingStat) {\n                // Update existing stat\n                return prevStats.map(stat => stat.emoji_unicode === emoji.unicode ? {\n                  ...stat,\n                  total_views: Number(stat.total_views) + 1\n                } : stat);\n              } else {\n                // Add a new stat entry for the emoji if it doesn't exist\n                return [...prevStats, {\n                  emoji_unicode: emoji.unicode,\n                  total_likes: 0,\n                  total_views: 1\n                }]; // Initialize likes to 0 since it's a new entry\n              }\n            });\n\n            // Optionally, handle any local storage updates here if necessary\n          } else {\n            console.error(`Failed to update view count: ${response.status}`);\n          }\n        } catch (err) {\n          let message;\n          if (err instanceof Error) {\n            message = err.message;\n          } else {\n            message = String(err);\n          }\n\n          // Log the error for debugging\n          console.error(\"Update View Count Error:\", message);\n        }\n      }\n    };\n    updateViewCount();\n  }, [emoji.unicode, setTotalStats]);\n  return <div className=\"max-w-[1200px] mx-5 flex sm:block flex-col sm:flex-row gap-12 sm:gap-0 text-center justify-center items-center sm:text-left\">\n      <div className=\"float-left border-2 font-nunito bg-purple-50 min-w-[16em] border-purple-200 pb-12 pt-6 -translate-y-2  px-10 sm:mr-8  flex flex-col rounded-lg \">\n        <LikesAndViews totalStats={totalStats} unicode={emoji.unicode} />\n        <h2 className=\"tracking-widest leading-relaxed uppercase font-lora flex justify-center items-center gap-2\">\n          <span className=\"text-2xl\">{emoji.title}</span>(U+\n          {emoji.unicode.slice(1)})\n        </h2>\n        <div className=\"flex flex-col  justify-center mt-5 items-center gap-3\">\n          <img loading=\"lazy\" title={emoji?.title + \" \" + emoji?.unicode} aria-label={emoji?.title + \" \" + emoji?.unicode} width={50} height={50} alt={`Emoji of ${emoji.title + \" \" + emoji.unicode}`} src={`https://fonts.gstatic.com/s/e/notoemoji/latest/${emoji?.unicode?.length < 9 ? emoji?.unicode.slice(1) : emoji?.unicode.split(\"-\").join(\"_\")}/emoji.svg`} />\n          <ul className=\"grid grid-cols-2 mt-5 gap-x-12 gap-y-6 text-lg font-nunito justify-center items-center\">\n            <li title={`Like ${emoji?.unicode} emoji`} className=\"flex justify-center items-center col-span-2\">\n              <button onClick={() => updateLikeCount(emoji?.unicode)} className=\"flex gap-1 bg-white justify-between border-2 px-3 py-2 hover:scale-105 rounded-md border-purple-300 text-purple-500 cursor-pointer hover:border-purple-500 hover:text-purple-600\">\n                <span>Like</span>{\" \"}\n                <span className=\"flex\">\n                  <Icon icon=\"heart\" title=\"\uD83D\uDC96 Heart Icon (like)\" customStyle=\"fill-rose-500 w-5 translate-y-[0.1rem]\" />\n                </span>\n              </button>\n            </li>\n            <li className=\"flex col-span-2 justify-center items-center\" title={`Copy ${emoji?.title} Emoji`}>\n              <button onClick={() => {\n              setIsCopied(emoji?.title);\n              navigator.clipboard.writeText(emoji?.title);\n            }} className=\"flex bg-white w-40 justify-center items-center border-2 px-3 py-2 hover:scale-105 rounded-md border-purple-300 text-purple-500 cursor-pointer hover:border-purple-500 hover:text-purple-600\">\n                {isCopied === emoji?.title ? <span className=\"text-lg min-w-[4.9em] flex text-center justify-center items-center\">\n                    {\" \"}\n                    Copied!\n                  </span> : <div className=\"flex gap-1 px-2 justify-center items-center\">\n                    <span className=\"whitespace-nowrap text-base\">\n                      Copy Emoji\n                    </span>{\" \"}\n                    <span className=\"flex\">{emoji?.title}</span>\n                  </div>}\n              </button>\n            </li>\n          </ul>\n        </div>\n      </div>\n      <p>{emoji.description}</p>\n    </div>;\n}\n_s(EmojiPreview, \"RHZbnxwYo0NRBlOjD3NJnrYSzTg=\", false, function () {\n  return [useOutletContext, useUpdateLikes];\n});\n_c = EmojiPreview;\nfunction ComboTable({\n  emoji\n}) {\n  return <table className=\"flex flex-col w-full sm:gap-8 text-center items-center max-h-[40em] overflow-auto scrollbar-thin scrollbar-thumb-rose-700 scrollbar-track-rose-300\">\n      <thead className=\"flex w-full mb-10 sm:mb-none\">\n        <tr className=\"gap-2 sm:gap-10 grid grid-cols-8 text-lg text-center sm:text-xl underline decoration-[#fda4af] underline-offset-3 w-full justify-center items-center\">\n          <th className=\"text-rose-500 col-span-2 font-nunito flex justify-center items-center w-full\">\n            First Emoji\n          </th>\n          <td className=\"col-span-1\"></td>\n          <th className=\"text-rose-500 col-span-2 font-nunito flex justify-center items-center w-full\">\n            Second Emoji\n          </th>\n          <td className=\"col-span-1\"></td>\n          <th className=\"text-rose-500 col-span-2 font-nunito flex justify-center items-center w-full\">\n            Combo\n          </th>\n        </tr>\n      </thead>\n      <tbody className=\"flex gap-6 flex-col w-full\">\n        {emoji?.combos?.map(combo => <tr key={uuidv4()} className=\"grid w-full gap-2 sm:gap-10 grid-cols-8 justify-center items-center\">\n              <td className=\"flex col-span-2 justify-center items-center w-full text-lg font-nunito text-rose-500  py-1 px-1 rounded-lg text-center capitalize\">\n                <img loading=\"lazy\" className=\"flex w-12\" alt={`Emoji of ${emoji.title} ${emoji.name}`} src={`https://fonts.gstatic.com/s/e/notoemoji/latest/${emoji.unicode?.length < 9 ? emoji.unicode.slice(1) : emoji.unicode.split(\"-\").join(\"_\")}/emoji.svg`} />\n              </td>\n              <td className=\"col-span-1 text-4xl text-rose-200\">+</td>\n              <td className=\"flex justify-center col-span-2 items-center w-full text-lg font-nunito text-rose-500  py-1 px-1 rounded-lg text-center capitalize\">\n                <img loading=\"lazy\" className=\"flex w-12\" alt={`Emoji of ${emoji.title} ${emoji.name}`} src={`https://fonts.gstatic.com/s/e/notoemoji/latest/${combo.unicode.split(\"_\")[1].split(\"-\")[0] === emoji.unicode ? combo.unicode.split(\"_\")[0].slice(1).split(\"-\")[0] : combo.unicode.split(\"_\")[1].slice(1).split(\"-\")[0]}/emoji.svg`} />\n              </td>\n              <td className=\"col-span-1 text-4xl text-rose-200\">=</td>\n              <td className=\"flex justify-center col-span-2 items-center w-full text-lg font-nunito text-rose-500  py-1 px-1 rounded-lg text-center capitalize\">\n                <div className=\"w-12\">\n                  <ComboImage firstEmoji={combo.baseUnicode.length < 9 ? combo.baseUnicode : combo.baseUnicode.split(\"u\").join(\"\")} secondEmoji={combo.unicode.slice(1).split(\"-u\").join(\"-\")} emojiData={emoji} setSecondEmoji={() => {}} menuStyle=\"hidden\" bottomMenuStyle=\"hidden\" />\n                </div>\n              </td>\n              <td className=\"w-full col-span-4 col-start-3 border-b-2 border-rose-100 mb-3\"></td>\n            </tr>)}\n      </tbody>\n    </table>;\n}\n_c2 = ComboTable;\nfunction EmojiDetails({\n  emoji\n}) {\n  _s2();\n  const {\n    loadCombos\n  } = useOutletContext();\n  return <div className=\"max-w-[1200px] my-10 flex gap-10 flex-col  text-lg leading-loose tracking-widest bg-white bg-opacity-[0.8] p-16 rounded-lg\">\n      <h2 className=\"tracking-widest leading-relaxed  font-lora capitalize text-2xl text-center\">\n        Learn the meaning of {emoji.title} emoji{\" \"}\n        <span className=\"text-rose-500\">(Includes synonyms)</span>\n      </h2>\n      <ul className=\"flex gap-5 flex-col\">\n        {\" \"}\n        {emoji?.meanings?.map(meaning => <li key={uuidv4()}>\n            <span className=\"text-rose-500 font-nunito\">\n              {meaning?.split(\":\")[0]}:{\" \"}\n            </span>\n            <span>{meaning?.split(\":\")[1]}</span>\n          </li>)}\n      </ul>\n      <div className=\"w-full border-b-2 border-rose-100 mt-2\"></div>\n      <h2 className=\"tracking-widest leading-relaxed font-lora capitalize text-2xl mt-5 text-center\">\n        How to use {emoji.title} emoji{\" \"}\n        <span className=\"text-rose-500\">in a sentence</span>\n      </h2>\n      <ul className=\"flex flex-col gap-5 text-center\">\n        {\" \"}\n        {emoji?.sentences?.map(sentences => <li key={uuidv4()}>{sentences}</li>)}\n      </ul>\n      <div className=\"w-full border-b-2 border-rose-100 mt-2\"></div>\n      <h2 className=\"tracking-widest leading-relaxed font-lora capitalize text-2xl mt-5 text-center\">\n        <span className=\"text-rose-500\">Fun Short Story</span> using{\" \"}\n        {emoji.title} emoji\n      </h2>\n      <ul className=\"flex flex-col gap-5 text-center\">\n        {emoji?.story.split(\"/n\").map(paragraph => <li key={uuidv4()}>\n            <p>{paragraph}</p>\n          </li>)}\n      </ul>\n      <div className=\"w-full border-b-2 border-rose-100 mt-2\"></div>\n      <h2 className=\"tracking-widest leading-relaxed font-lora capitalize text-2xl mt-3 text-center\">\n        <span className=\"text-rose-500\">\n          Related Emoji Keyboard Combinations\n        </span>{\" \"}\n        {/* eslint-disable-next-line react/no-unescaped-entities */}\n        From Gboard's Emoji Kitchen on Android\n      </h2>\n      <Link className=\"text-sky-600 hover:text-sky-500 w-full justify-center text-center items-center flex font-nunito mb-1\" to=\"/\">\n        Looking for a specific combination? Click here to search!\n      </Link>\n      {loadCombos && <ComboTable emoji={emoji} />}\n      <div className=\"w-full border-b-2 border-rose-100 mt-2\"></div>\n      <h2 className=\"tracking-widest leading-relaxed font-lora capitalize text-2xl mt-3 text-center\">\n        <span className=\"text-rose-500\">Related Keywords</span> to understand\n        the emoji meanings of {emoji.title}\n      </h2>\n      <ul className=\"grid sm:grid-cols-3 overflow-auto max-h-[40em] scrollbar-thin scrollbar-thumb-rose-700 scrollbar-track-rose-300 sm:max-h-none gap-4 justify-center items-center\">\n        {\" \"}\n        {emoji?.keywords?.map(keywords => <li key={uuidv4()} className=\"flex justify-center items-center text-lg font-nunito text-rose-500  py-1 px-1 rounded-lg text-center capitalize\">\n            {keywords}\n          </li>)}\n      </ul>\n    </div>;\n}\n_s2(EmojiDetails, \"EpFtHDY5gIwQFVHb0mi8i7/28e8=\", false, function () {\n  return [useOutletContext];\n});\n_c3 = EmojiDetails;\nfunction LanguageTable({\n  emoji\n}) {\n  const languages = {\n    afghanistan: \"pashto\",\n    albania: \"albanian\",\n    algeria: \"arabic\",\n    andorra: \"catalan\",\n    angola: \"portuguese\",\n    argentina: \"spanish\",\n    armenia: \"armenian\",\n    australia: \"english\",\n    austria: \"german\",\n    azerbaijan: \"azerbaijani\",\n    bahamas: \"english\",\n    bahrain: \"arabic\",\n    bangladesh: \"bengali\",\n    barbados: \"english\",\n    belarus: \"belarusian\",\n    belgium: \"dutch\",\n    belize: \"english\",\n    benin: \"french\",\n    bhutan: \"dzongkha\",\n    bolivia: \"spanish\",\n    \"bosnia and herzegovina\": \"bosnian\",\n    botswana: \"english\",\n    brazil: \"portuguese\",\n    brunei: \"malay\",\n    bulgaria: \"bulgarian\",\n    \"burkina faso\": \"french\",\n    burundi: \"kirundi\",\n    \"cabo verde\": \"portuguese\",\n    cambodia: \"khmer\",\n    cameroon: \"french\",\n    canada: \"english\",\n    \"central african republic\": \"french\",\n    chad: \"french\",\n    chile: \"spanish\",\n    china: \"mandarin\",\n    colombia: \"spanish\",\n    comoros: \"french\",\n    \"congo (congo-brazzaville)\": \"french\",\n    \"costa rica\": \"spanish\",\n    croatia: \"croatian\",\n    cuba: \"spanish\",\n    cyprus: \"greek\",\n    \"czech republic (czechia)\": \"czech\",\n    denmark: \"danish\",\n    djibouti: \"french\",\n    dominica: \"english\",\n    \"dominican republic\": \"spanish\",\n    ecuador: \"spanish\",\n    egypt: \"arabic\",\n    \"el salvador\": \"spanish\",\n    \"equatorial guinea\": \"spanish\",\n    eritrea: \"tigrinya\",\n    estonia: \"estonian\",\n    \"eswatini (formerly swaziland)\": \"swati\",\n    ethiopia: \"amharic\",\n    fiji: \"english\",\n    finland: \"finnish\",\n    france: \"french\",\n    gabon: \"french\",\n    gambia: \"english\",\n    georgia: \"georgian\",\n    germany: \"german\",\n    ghana: \"english\",\n    greece: \"greek\",\n    grenada: \"english\",\n    guatemala: \"spanish\",\n    guinea: \"french\",\n    \"guinea-bissau\": \"portuguese\",\n    guyana: \"english\",\n    haiti: \"haitian creole\",\n    honduras: \"spanish\",\n    hungary: \"hungarian\",\n    iceland: \"icelandic\",\n    india: \"hindi\",\n    indonesia: \"indonesian\",\n    iran: \"persian\",\n    iraq: \"arabic\",\n    ireland: \"english\",\n    israel: \"hebrew\",\n    italy: \"italian\",\n    jamaica: \"english\",\n    japan: \"japanese\",\n    jordan: \"arabic\",\n    kazakhstan: \"kazakh\",\n    kenya: \"swahili\",\n    kiribati: \"english\",\n    kuwait: \"arabic\",\n    kyrgyzstan: \"kyrgyz\",\n    laos: \"lao\",\n    latvia: \"latvian\",\n    lebanon: \"arabic\",\n    lesotho: \"sesotho\",\n    liberia: \"english\",\n    libya: \"arabic\",\n    liechtenstein: \"german\",\n    lithuania: \"lithuanian\",\n    luxembourg: \"luxembourgish\",\n    madagascar: \"malagasy\",\n    malawi: \"english\",\n    malaysia: \"malay\",\n    maldives: \"dhivehi\",\n    mali: \"french\",\n    malta: \"maltese\",\n    \"marshall islands\": \"marshallese\",\n    mauritania: \"arabic\",\n    mauritius: \"english\",\n    mexico: \"spanish\",\n    micronesia: \"english\",\n    moldova: \"romanian\",\n    monaco: \"french\",\n    mongolia: \"mongolian\",\n    montenegro: \"montenegrin\",\n    morocco: \"arabic\",\n    mozambique: \"portuguese\",\n    \"myanmar (formerly burma)\": \"burmese\",\n    namibia: \"english\",\n    nauru: \"nauruan\",\n    nepal: \"nepali\",\n    netherlands: \"dutch\",\n    \"new zealand\": \"english\",\n    nicaragua: \"spanish\",\n    niger: \"french\",\n    nigeria: \"english\",\n    \"north korea\": \"korean\",\n    \"north macedonia\": \"macedonian\",\n    norway: \"norwegian\",\n    oman: \"arabic\",\n    pakistan: \"urdu\",\n    palau: \"palauan\",\n    \"palestine state\": \"arabic\",\n    panama: \"spanish\",\n    \"papua new guinea\": \"tok pisin\",\n    paraguay: \"spanish\",\n    peru: \"spanish\",\n    philippines: \"filipino\",\n    poland: \"polish\",\n    portugal: \"portuguese\",\n    qatar: \"arabic\",\n    romania: \"romanian\",\n    russia: \"russian\",\n    rwanda: \"kinyarwanda\",\n    \"saint kitts and nevis\": \"english\",\n    \"saint lucia\": \"english\",\n    \"saint vincent and the grenadines\": \"english\",\n    samoa: \"samoan\",\n    \"san marino\": \"italian\",\n    \"sao tome and principe\": \"portuguese\",\n    \"saudi arabia\": \"arabic\",\n    senegal: \"french\",\n    serbia: \"serbian\",\n    seychelles: \"french\",\n    \"sierra leone\": \"english\",\n    singapore: \"malay\",\n    slovakia: \"slovak\",\n    slovenia: \"slovene\",\n    \"solomon islands\": \"english\",\n    somalia: \"somali\",\n    \"south africa\": \"zulu\",\n    \"south korea\": \"korean\",\n    \"south sudan\": \"english\",\n    spain: \"spanish\",\n    \"sri lanka\": \"sinhala\",\n    sudan: \"arabic\",\n    suriname: \"dutch\",\n    sweden: \"swedish\",\n    switzerland: \"german\",\n    syria: \"arabic\",\n    taiwan: \"mandarin\",\n    tajikistan: \"tajik\",\n    tanzania: \"swahili\",\n    thailand: \"thai\",\n    \"timor-leste\": \"portuguese\",\n    togo: \"french\",\n    tonga: \"tongan\",\n    \"trinidad and tobago\": \"english\",\n    tunisia: \"arabic\",\n    turkey: \"turkish\",\n    turkmenistan: \"turkmen\",\n    tuvalu: \"tuvaluan\",\n    uganda: \"english\",\n    ukraine: \"ukrainian\",\n    \"arab countries\": \"arabic\",\n    \"united arab emirates\": \"arabic\",\n    \"united kingdom\": \"english\",\n    \"united states of america\": \"english\",\n    uruguay: \"spanish\",\n    uzbekistan: \"uzbek\",\n    vanuatu: \"bislama\",\n    \"vatican city\": \"italian\",\n    venezuela: \"spanish\",\n    vietnam: \"vietnamese\",\n    yemen: \"arabic\",\n    arabic: \"arabic\",\n    zambia: \"english\",\n    zimbabwe: \"english\"\n  };\n  return <div className=\"flex flex-col mb-2 justify-center items-center gap-10 text-purple-600\">\n      <h2 className=\"text-2xl justify-center items-center flex w-full text-center sm:text-2xl font-lora \">\n        {emoji.title} {emoji.name} Emoji Name In Other Languages\n      </h2>\n      <table className=\"flex gap-3 w-full flex-col text-xs sm:text-sm  max-w-[1200px]\">\n        <thead className=\"grid grid-cols-3 sm:grid-cols-4 sm:gap-x-10 mb-1 underline underline-offset-2 decoration-[#94a3b8] w-full\">\n          <tr className=\"hidden sm:flex w-full\">\n            <th className=\"text-slate-700 font-nunito flex justify-center items-center w-full\">\n              Country Code\n            </th>\n          </tr>\n          <tr className=\"flex w-full\">\n            <th className=\"text-slate-700 font-nunito flex justify-center items-center w-full\">\n              Country\n            </th>\n          </tr>\n          <tr className=\"flex w-full\">\n            <th className=\"text-slate-700 font-nunito flex justify-center items-center w-full\">\n              Language\n            </th>\n          </tr>\n          <tr className=\"flex w-full\">\n            <th className=\"text-slate-700 font-nunito flex justify-center items-center w-full\">\n              Name\n            </th>\n          </tr>\n        </thead>\n        <tbody className=\"flex  w-full flex-col gap-3\">\n          {emoji.languages.map(language => <tr key={uuidv4()} className=\"grid grid-cols-3 sm:grid-cols-4 sm:gap-x-10 w-full\">\n                <td className=\"hidden sm:flex justify-center items-center w-full font-nunito text-slate-500  py-1 px-1 rounded-lg text-center capitalize\">\n                  {\" \"}\n                  {language.countryAbb}\n                </td>\n                <td className=\"flex justify-center items-center w-full font-nunito text-slate-500  py-1 px-1 rounded-lg text-center capitalize\">\n                  {language.country.toLowerCase().includes(\"arab\") ? \"Arab Countries\" : language.country}\n                </td>\n                <td className=\"flex justify-center items-center w-full font-nunito text-slate-500  py-1 px-1 rounded-lg text-center capitalize\">\n                  {language.country.toLowerCase().includes(\"arab\") ? \"Arabic\" : languages[`${language?.country.toLowerCase()}`]}\n                </td>\n                <td className=\"flex justify-center items-center w-full font-nunito text-slate-500  py-1 px-1 rounded-lg text-center capitalize\">\n                  {language.name}\n                </td>\n              </tr>)}\n        </tbody>\n      </table>\n    </div>;\n}\n_c4 = LanguageTable;\nexport default function Emoji() {\n  _s3();\n  const {\n    emojiData\n  } = useLoaderData();\n  return <div className=\"flex flex-col w-full font-lato justify-center items-center tracking-widest mt-12 leading-loose text-slate-600 text-lg gap-20\">\n      {[emojiData].map(emoji => <Fragment key={uuidv4()}>\n          <EmojiPreview emoji={emoji} />\n          <div className=\"bg-rose-50 w-full justify-center items-center py-10  flex \">\n            <EmojiDetails emoji={emoji} />\n          </div>\n          <LanguageTable emoji={emoji} />\n        </Fragment>)}\n    </div>;\n}\n_s3(Emoji, \"fQDIsXyGR7meDpIHnAFu8OtiANo=\", false, function () {\n  return [useLoaderData];\n});\n_c5 = Emoji;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"EmojiPreview\");\n$RefreshReg$(_c2, \"ComboTable\");\n$RefreshReg$(_c3, \"EmojiDetails\");\n$RefreshReg$(_c4, \"LanguageTable\");\n$RefreshReg$(_c5, \"Emoji\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "import validate from './validate.js';\n\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  //\n  // Note to future-self: No, you can't remove the `toLowerCase()` call.\n  // REF: https://github.com/uuidjs/uuid/pull/677#issuecomment-1757351351\n  return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\n}\nfunction stringify(arr, offset = 0) {\n  var uuid = unsafeStringify(arr, offset);\n  // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n  return uuid;\n}\nexport default stringify;", "// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\n\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n  return getRandomValues(rnds8);\n}", "var randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};", "import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    offset = offset || 0;\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n    return buf;\n  }\n  return unsafeStringify(rnds);\n}\nexport default v4;"],
  "mappings": "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",
  "names": ["import_react", "localforage"]
}
