{
  "version": 3,
  "sources": ["../../../app/routes/copy-and-paste.emoji-copy-and-paste.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/copy-and-paste.emoji-copy-and-paste.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/copy-and-paste.emoji-copy-and-paste.tsx\");\n  import.meta.hot.lastModified = \"1731046171314.043\";\n}\n// REMIX HMR END\n\nimport { json, redirect } from \"@remix-run/node\";\nimport CopyPaste from \"../client/components/ui/CopyPasteTextbox\";\nimport cloudflareR2API from \"../client/components/api/cloudflareR2API\";\nimport { Link, useLoaderData, useOutletContext } from \"@remix-run/react\";\nimport localforage from \"localforage\";\nimport { useState } from \"react\";\nimport SectionMenu from \"../client/components/navigation/SectionMenu\";\nimport useManageCopiedMsg from \"../client/components/hooks/useManageCopiedMsg\";\nimport useDisplayLimitOnScroll from \"../client/components/hooks/useDisplayLimitOnScroll\";\nexport const meta = () => {\n  return [{\n    title: \"\u2702\uFE0F Emoji Copy And Paste - Cool Symbols & Cool Fonts & Cool Text for iOS, Android, Browsers, iPhone, and more!\"\n  }, {\n    name: \"description\",\n    content: \"Discover and easily copy a wide range of cool emojis, symbols, fonts, and text styles for use on iOS, Android, browsers, iPhones, and more! Enhance your messages, social media posts, and creative projects with our extensive collection of unique and fun characters.\"\n  }];\n};\nexport const loader = async () => {\n  let symbols = null;\n  try {\n    const response = await cloudflareR2API.get(`/emojis/symbols.json`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => response.data);\n    if (response) {\n      symbols = response;\n    }\n  } catch (error) {\n    // If there is an error fetching the emoji filenames, log the error\n    console.error(\"Error fetching emoji filenames:\", error);\n  }\n  if (!symbols || Object.keys(symbols).length === 0) return redirect(\"/404\");\n  return json({\n    symbols\n  });\n};\n\n/**\n * This function is responsible for fetching filenames (static json data) from the server and caching them in the browser.\n * It first checks if the filenames are already cached in local storage. If they are, it returns the cached filenames.\n * If they are not cached, it fetches the filenames from the server and caches them.\n *\n * @param {ClientLoaderFunctionArgs} args - An object containing the serverLoader function.\n * @returns {Promise<{ filenames: { id: string, keys: string }[] }>} - A promise that resolves to an object containing the filenames.\n * @throws {Error} - If there is an error fetching the filenames from the server or caching them in local storage.\n */\nexport async function clientLoader({\n  serverLoader\n}) {\n  const cacheKey = \"symbols\";\n  try {\n    // Check if the symbols are already cached in local storage\n    const symbols = await localforage.getItem(cacheKey);\n\n    // If the symbols are cached, return them\n    if (symbols) {\n      return {\n        symbols\n      };\n    } else {\n      // If the filenames are not cached, fetch them from the server and cache them\n      const {\n        symbols\n      } = await serverLoader();\n\n      // Cache the symbols in local storage\n      await localforage.setItem(cacheKey, symbols);\n\n      // Return the cached symbols\n      return {\n        symbols\n      };\n    }\n  } catch (error) {\n    // If there is an error fetching the cached filenames, log the error and continue to fetch the filenames from the server\n    console.error(\"Error fetching cached filenames:\", error);\n  }\n}\nexport default function EmojiCopyAndPaste() {\n  _s();\n  const {\n    symbols\n  } = useLoaderData();\n  const [displayLimit, setDisplayLimit] = useState(2);\n  useDisplayLimitOnScroll({\n    displayLimit,\n    setDisplayLimit\n  });\n  const {\n    setCopyText,\n    displayCopyText,\n    setDisplayCopyText,\n    textareaIsHidden,\n    setTextareaIsHidden\n  } = useOutletContext();\n  const {\n    isCopied,\n    setIsCopied\n  } = useManageCopiedMsg();\n  const symbolMenuObject = {\n    Smileys: \"\",\n    People: \"\",\n    Objects: \"\",\n    Nature: \"\",\n    Symbols: \"\",\n    Food: \"\",\n    Transportation: \"\",\n    Animals: \"\",\n    Hands: \"\",\n    Arrows: \"\",\n    Buildings: \"\",\n    Sports: \"\",\n    Flags: \"\",\n    Stars: \"\",\n    Legal: \"\",\n    Money: \"\",\n    Brackets: \"\",\n    \"Chess & Cards\": \"\",\n    Music: \"\",\n    Weather: \"\",\n    \"Arrow Lines\": \"\",\n    Astrology: \"\",\n    Hearts: \"\",\n    \"Check mark\": \"\",\n    \"People & Smiley\": \"\",\n    Punctuation: \"\",\n    Math: \"\",\n    Numbers: \"\",\n    Fractions: \"\",\n    Comparisons: \"\",\n    Technical: \"\",\n    \"Rectangle & Square\": \"\",\n    Triangles: \"\",\n    Lines: \"\",\n    Corners: \"\",\n    Circles: \"\",\n    Phonetics: \"\",\n    \"Latin Letters\": \"\",\n    \"Greek Letters\": \"\",\n    \"Chinese Symbols\": \"\",\n    \"Japanese Symbols\": \"\",\n    \"Korean Symbols\": \"\"\n  };\n  return <div className=\"flex flex-col gap-10 justify-center leading-loose tracking-widest items-center\">\n      <header>\n        <h1 className=\" font-lora text-center leading-loose text-purple-700 translate-y-10 text-2xl mx-5 sm:text-3xl\">\n          \u2702\uFE0F Symbols, Emoji Copy And Paste\n          <div id=\"symbols\" className=\"-translate-y-[100em]\"></div>\n        </h1>\n      </header>\n      <main onMouseEnter={() => setDisplayLimit(1000)} onTouchStart={() => setDisplayLimit(1000)} className=\"max-w-[1200px] my-10 flex gap-16 flex-col mb-64 justify-center items-center\">\n        <SectionMenu object={symbolMenuObject} />\n        {Object.keys(symbols).map((key, mainIndex) => {\n        return mainIndex < displayLimit ? <section key={key} className=\"overflow-auto lg:overflow-hidden  pt-10 sm:px-10 scrollbar-thin border-2 rounded-lg border-rose-100 scrollbar-thumb-rose-700 scrollbar-track-rose-300 \">\n              <h2 className=\"flex capitalize mb-8 font-lora w-full text-rose-400 justify-center items-center text-center text-lg sm:text-2xl\">\n                {key}\n              </h2>\n              <ul className=\"text-2xl grid font-nunito grid-cols-4 sm:grid-cols-7 px-5 lg:grid-cols-12 xl:grid-cols-14 gap-5 w-full justify-center items-center\">\n                {symbols[key].map((symbol, index) => <li title={symbol} key={symbol + index} className=\"flex justify-center items-center\">\n                    <button aria-label={`Copy ${symbol} emoji to clipboard`} onClick={() => {\n                setCopyText(symbol);\n                setIsCopied(symbol);\n              }} className={`${isCopied === symbol ? \"text-xs\" : \"text-4xl\"} border-2 px-3 py-3 rounded-md max-w-[5.4em] hover:scale-110 border-rose-200 text-rose-500 cursor-pointer justify-center items-center flex w-full hover:border-rose-400 hover:text-rose-500`}>\n                      {isCopied === symbol ? \"Copied!\" : symbol}\n                      <div id={Object.keys(symbolMenuObject)[mainIndex]} className=\"-translate-y-64\"></div>\n                    </button>\n                  </li>)}\n                <li className=\"col-span-4 sm:col-span-7 lg:col-span-12 xl:col-span-14 w-full justify-center items-center flex mt-20 mb-10 text-xl\">\n                  {\" \"}\n                  <Link area-label=\"Scroll To Menu\" className=\" text-sky-600 text-center hover:text-sky-500 flex gap-1 sm:gap-5\" to=\"#symbols\">\n                    <span className=\"scale-x-[-1]\">\u261D\uFE0F\u261D\uD83C\uDFFB\u261D\uD83C\uDFFC</span>Scroll To Menu\n                    <span>\u261D\uD83C\uDFFD\u261D\uD83C\uDFFE\u261D\uD83C\uDFFF</span>\n                  </Link>\n                </li>\n              </ul>\n            </section> : null;\n      })}\n        <CopyPaste isHidden={textareaIsHidden} setIsHidden={setTextareaIsHidden} displayCopyText={displayCopyText} setDisplayCopyText={setDisplayCopyText} />\n      </main>\n    </div>;\n}\n_s(EmojiCopyAndPaste, \"VAAjmbqHL4NNKiniv6u+fgKgCJk=\", false, function () {\n  return [useLoaderData, useDisplayLimitOnScroll, useOutletContext, useManageCopiedMsg];\n});\n_c = EmojiCopyAndPaste;\nvar _c;\n$RefreshReg$(_c, \"EmojiCopyAndPaste\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["import_react", "localforage", "symbols"]
}
